// <auto-generated />
using CityInfor.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityInfor.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    [Migration("20240705114502_SeededCityAndPointOfInterestTables")]
    partial class SeededCityAndPointOfInterestTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CityInfor.API.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The Capital city",
                            Name = "Vilnius"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The second biggest city in Lithuania",
                            Name = "Kaunas"
                        },
                        new
                        {
                            Id = 3,
                            Description = "at the shore of the baltic sea, it's the ideal place to enjoy beach during summer",
                            Name = "Klapedia"
                        });
                });

            modelBuilder.Entity("CityInfor.API.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointOfInterests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "Iconic point in vilnius",
                            Name = "Gedimino Bokstas"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Description = "Iconic point in vilnius",
                            Name = "Three Statues"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Description = "Kaunas international airport",
                            Name = "Kaunas Airport"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            Description = "Kaunas central rails stations",
                            Name = "Kaunas Central Station"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 3,
                            Description = "Klaipeda international airport",
                            Name = "Klaipeda Beach"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 3,
                            Description = "Palanga central rails stations",
                            Name = "Palanga Beach"
                        });
                });

            modelBuilder.Entity("CityInfor.API.Entities.PointOfInterest", b =>
                {
                    b.HasOne("CityInfor.API.Entities.City", "City")
                        .WithMany("PointOfInterests")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CityInfor.API.Entities.City", b =>
                {
                    b.Navigation("PointOfInterests");
                });
#pragma warning restore 612, 618
        }
    }
}
